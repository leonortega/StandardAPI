services:
  standardapi.api:
    image: standardapi
    build:
      context: .
      dockerfile: src/StandardAPI/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      - ConnectionStrings__DefaultConnection=Host=cockroachdb;Port=26257;Database=defaultdb;Username=root;SslMode=Disable;Search Path=demo
      - Redis__ConnectionString=redis:6379
      - Redis__DefaultCacheExpiryMinutes=10
      - Polly__RetryCount=3
      - Polly__RetryIntervalInSeconds=2
      - Polly__CircuitBreakerDurationInSeconds=30
      - Polly__CircuitBreakerExceptionsAllowedBeforeBreaking=2
      - Polly__RateLimitMaxRequest=1000
      - Polly__RateLimitTimeWindowInSeconds=1
    depends_on:
      - cockroachdb
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f --insecure https://localhost:8081/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - logs:/app/logs # Mount a volume for logs
    networks:
      app-network:
        ipv4_address: 192.168.1.100
        
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    networks:
      app-network:
        ipv4_address: 192.168.1.101
      
  cockroachdb:
    image: cockroachdb/cockroach:latest-v23.1
    container_name: cockroachdb
    hostname: cockroachdb
    ports:
      - "26257:26257" # SQL port
      - "8080:8080"   # Admin UI port
    command: start-single-node --insecure
    volumes:
      - crdb_data:/cockroach/cockroach-data
    networks:
      app-network:
        ipv4_address: 192.168.1.102

  demowebsite:
    image: demowebsite
    container_name: demowebsite
    build:
      context: .
      dockerfile: src/DemoWebsite/Dockerfile
    ports:
      - "5002:57391"
    depends_on:
      - standardapi.api
    networks:
      app-network:
        ipv4_address: 192.168.1.103

volumes:
  logs: # Volume for logs
  redisdata: # Volume for Redis data
  crdb_data: # Volume for CRRB data
  
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24    