services:
  # webapi:
    # build:
      # context: .
      # dockerfile: Dockerfile
    # ports:
      # - "5000:80"
      # - "5001:443"
    # expose:
      # - "80"      
    # environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      # - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=StandardAPIDB;User Id=sa;Password=Mvpqmq100v!;
      # - Redis__ConnectionString=redis:6379
    # depends_on:
      # - sqlserver
      # - redis
    # volumes:
      # - logs:/app/logs # Mount a volume for logs
    # networks:
      # app-network:
        # ipv4_address: 192.168.1.100
        
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    networks:
      app-network:
        ipv4_address: 192.168.1.101
      
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Mvpqmq100v!
    volumes:
      - sqlserverdata:/var/opt/mssql
    networks:
      app-network:
        ipv4_address: 192.168.1.102
      
volumes:
  logs: # Volume for logs
  redisdata: # Volume for Redis data
  sqlserverdata: # Volume for SQL Server data
  
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24    